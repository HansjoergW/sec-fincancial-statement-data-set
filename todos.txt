Todos
------

New Release
- adapt readme
- adapt notebooks
- in gitpages branch
    - adapt release notes
    - adapt index
- adapt releases in project.toml
- merge back into main
- set tag and push tag (format vx.x.x)
- on github -> under code releases: draft new release


v.1.7.0
BugFix
- OfficialTagsOnlyJoinedFilter fixed: did actually filter only inofficial tags

New
- check for update is always executed, regardless which feature of the framework is used
  (previously just the collectors caused a check for updates)
 -> via __init__.py of special c_update_check module, which is imported from the by the main modules
- whole data update process implemented with a simple process/task framework
- interface Updater classmethod has changed -> taking config-instance
- post_update_hook definition -> called after updates with Configuration as parameter
- post_update_processes definition -> returns processes that are executed after standard process (dld, transform, index)
- concat methods have new option to dropduplicates in resulting sub_df: default is to False

- hook for after updated logic

    - Aufbereitung der Daten für BS, IS und CF Statement möglichst direkt bei update machen,
      so, dass diese Daten schon vorbereitet und gefiltert zur Verfügung stehen.
      Vlt. auch eine Art PostDownload Hook anbieten.
      einfaches Pipeline Framework
    - only if flag is set to true
    - example notebook
    - configparser.ConfigParser instance wird übergeben -> Section Default ist sec settings

 - Process / Task Framework sollte unabhängig von update verwendet werden können
   -> als simple Process Engine



Todos:
- process/task execution Method in task-framework (ok)
- standardization processes in own module (ok)
- document automation classes
  task_framework (ok)
  g_pipeline modules

- tests for all processes
- successfull run tests / linting
- base setting for parallel execution to False for "all" processes in config
- overwrite serial execution per task
- new notebook documentation / automation
  - after_update hook example
- readme -> add automation info
  -> how to easily enable "default extended processing"

- Die BaseTask Struktur ist etwas umständlich.
  Besser wäre ein BaseTask, der nur tmp und target path handling enhält und
  evtl. noch Bais funktionen für meta-inf handling enthält.
  Das Vermischen von check_by_timestamp und check_by_subfolder name macht die
  Erklärung etwas mühsam. Diese sollten eher in eigenen subclassen abgehandelt
  werden -> einziger "Nachteil" wäre, dass CombineTask zwei Varianten hätte





- in CF haben wir oft auch zusätzliche 'Cash' Tags -> benötigen wir diese im BS auch?
- MaxQtr PrePivot Rule also for BS und IS

- Standardize Oustanding Shares, resp. validate
  (see: https://github.com/HansjoergW/sec-fincancial-statement-data-set/issues/13)
  "But as I understand, they do not have the same exact meaning. I haven't investigated that, so I am not sure if you
  can assume that they are the same, resp. close enough to treat them that way. In the CP, the value appears
  as EntityCommonStockSharesOutstanding (if present), in the Balance Sheet as CommonStockSharesOutstanding,
  and in the IncomeStatement as WeightedAverageNumberOfSharesOutstandingBasic."

  -> adding EntityCommonStockSharesOutstanding from CP
  -> adding CommonStockSharesOutstanding to BS
  -> provide default handling of choosing which value for final "OutstandingShares"



- Discord Channel?
- evtl. sollte jede Regel noch eine "Explanation" bekommen. Ein Text, der die Regel spezifisch erklärt,
  nicht allgemein wie in description.

- usecase/analyzes ausarbeiten und eigenes Notebook mit Beispielen

- idea: using configuration file as parameter or as option instead of only class:
  Input Medium Feedback:
  "What do you think about letting update() and ConfigurationManager take config_file_name with default value ''?
  This seems to provide more explicit control. I know this would affect many functions which take config.
  How about replacing it by config_file_name?"


Next:
- vlt switch um parallele verarbeitung komplett auszuschalten?
- vlt switch maximale parallelität?

- new notebook, examples
  -> reading primary financial statements for a single report, display BS, IS, CF for a report
  -> analyse changes in one Tag for one company
  -> compare basic data of two companies

- Supporting Dataset with notes -> V.2

- Es wäre gut, wenn der StandardStatementPresenter noch eine Kolonne "year", noch welcher auch sortiert ist
  die sortierung über adsh alleine ermöglicht keine sauber sortierung pro jahr
  man könnte hierfür auch das report year aus sub verwenden

- Pipelines: einfaches Konzept um Standard Flows zu kapseln
  z.B. Collector als Input bis zur Presentation
  -> z.B. für selektierte ciks daten so aufbereiten, dass sie alle vorhandenen Jahre in Spalten angezeigt werden

- update des config files
  fehlende Inhalte müssen gesetzt und auf default gesetzt werden, oder?
  überflüssige Inhalte müssen entfernt werden
  -> Im Moment noch nicht notwendig -> würde erst notwendig, falls
     Optionen nicht mehr benützt werden

- in company collector -> eine sicht für sämtlich Jahre zeigen -> mit Jahren als spalten, aber
   - versuchen die selben Tags zu zeigen, notfalls mit null...
   - reihenfolge könnte ein problem sein

- - warning, falls daten nicht indexiert sind
    -> Hinweis Message beim Laden der Config
    -> config for autocheck to download / autodownload


later
-build timeline for company
-correct quarter naming -> was meine ich damit?
-db-version for updates


build, release & docu
- coverage report padge

Checkout für Visualisierung
- https://gist.github.com/mwouts/a2de16feb90d33fd89334fb09f62742f
- https://www.linkedin.com/pulse/interactive-dataframes-jupyter-google-colab-vs-code-pycharm-wouts/?trk=articles_directory
- https://pbpython.com/dataframe-gui-overview.html


Ideen
-----
- export excel
- cli
- https://streamlit.io/ ui


look at
-------
- https://pypi.org/project/edgartools/1.6.0/

