Todos
------

performance Tests
 -> lesen mit Parquet,  lesen mit Zip -> deutlich besser, vor allem beim interaktiven anzeigen


New Release
- adapt readme
- adapt releases in project.toml
- merge back into main


v.0.6.0
- MergeReader -> merges the content of several reader together
  -> or Merge class method, or method
- save method -> store and read as zip reader


v.0.5.0
- Parquet support
- automatisierung beim download der files verbessern
  -> first start erkennen
  -> autodownload option
     -> checked einmal pro Tag, ob neue Files vorhanden sind

- sicherstellen, dass nicht bei jeder config initialisierung daily-api abgefragt wird
- -> last check einfügen -> nur einmal pro tag

- parallels verarbeiten mit joblib
- download und index sollte im selben task erfolgen
- prüfen, welche zips zur verfügung stehen
- prüfen, welche parquet vorhanden sind enthält alle 3 files
- für fehlende prüfen, ob zip heruntergeladen werden muss
- falls ja, herunterladen und indexieren


next
- in company collector -> eine sicht für sämtlich Jahre zeigen -> mit Jahren als spalten, aber
   - versuchen die selben Tags zu zeigen, notfalls mit null...
   - reihenfolge könnte ein problem sein

- export load function, oder cache for MultiReportReader..
- - warning, falls daten nicht indexiert sind
    -> Hinweis Message beim Laden der Config
    -> config for autocheck to download / autodownload

- using sourcery ai to improve code
  -> see PR in Fork https://github.com/pikki622/sec-fincancial-statement-data-set/pulls

later
-build timeline for company
-correct quarter naming -> was meine ich damit?
-parquet support
-db-version for updates

features
- Example Notebooks
  - example report reading
  - example zip reading
  - example extension -> z.B. db access / erweiteren reader

build, release & docu
- coverage report padge
- release to readthedocs



Checkout für Visualisierung
- https://gist.github.com/mwouts/a2de16feb90d33fd89334fb09f62742f
- https://www.linkedin.com/pulse/interactive-dataframes-jupyter-google-colab-vs-code-pycharm-wouts/?trk=articles_directory
- https://pbpython.com/dataframe-gui-overview.html

Ideen
-----
- export excel
- cli
- https://streamlit.io/ ui


look at
-------
- https://pypi.org/project/edgartools/1.6.0/

